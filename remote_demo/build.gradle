/*
 * Copyright (C) 2018 xuexiangjys(xuexiangjys@163.com)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.application'
apply plugin: 'com.xuexiang.xaop' //引用xaop插件

android {
    compileSdkVersion build_versions.target_sdk
    buildToolsVersion build_versions.build_tools

    defaultConfig {
        applicationId "com.xuexiang.remotedemo"
        minSdkVersion 19
        targetSdkVersion build_versions.target_sdk
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    if (isNeedPackage.toBoolean()) {
        signingConfigs {
            release {
                storeFile file(app_release.storeFile)
                storePassword app_release.storePassword
                keyAlias app_release.keyAlias
                keyPassword app_release.keyPassword
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            if (isNeedPackage.toBoolean()) {
                signingConfig signingConfigs.release
            }
        }
    }

    if (isNeedPackage.toBoolean()) {
        applicationVariants.all { variant ->
            variant.outputs.all {
                if (variant.buildType.name.equals('release')) {
                    outputFileName = "remote_demo_${defaultConfig.versionName}.apk"
                }
            }
        }
    }

    lintOptions {
        abortOnError false
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation deps.support.app_compat
    testImplementation deps.junit
    androidTestImplementation deps.runner
    androidTestImplementation deps.espresso.core
    implementation deps.support.recyclerview
    implementation 'com.github.xuexiangjys.XUtil:xutil-core:1.1.4'
    implementation 'com.github.xuexiangjys.XAOP:xaop-runtime:1.0.1'
    //添加依赖
    //XPage
    implementation 'com.github.xuexiangjys.XPage:xpage-lib:2.2.2'
    annotationProcessor 'com.github.xuexiangjys.XPage:xpage-compiler:2.2.2'
    //butterKnife的sdk
    implementation 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    //如果开启了内存泄漏监测leak,就需要加上这个依赖
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5.4'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'
    testImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'


    implementation project(':xipc-runtime')
}
